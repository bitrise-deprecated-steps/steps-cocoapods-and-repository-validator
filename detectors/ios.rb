require 'pathname'
require_relative 'podfile'
require_relative '../config_helper'

branch = ARGV[0]
unless branch
  puts "\e[31mBranch not specified\e[0m"
  exit 0
end

config_helper = ConfigHelper.new

# Check for project files
ios_projects = Dir.glob(File.join("**/*.xcodeproj"), File::FNM_CASEFOLD)
ios_projects.concat(Dir.glob("**/*.xcworkspace", File::FNM_CASEFOLD))
ios_projects.delete_if { |workspace| workspace.include?(".xcodeproj/") || workspace.include?(".xcworkspace") }

exit 0 if (ios_projects.count) == 0

puts "\e[32miOS project detected\e[0m"

# Check for Podfiles
puts ""
puts "Checking for Podfile"
podfile_pathes = Dir.glob("**/Podfile", File::FNM_CASEFOLD)
podfile_pathes.delete_if { |podfile| podfile.include? ".git/" }

workspaces = {}
podfile_pathes.each do |path|
	puts "\e[32mPodfile detected at path: #{path}\e[0m"

	podfile = Podfile.from_file(path)
    workspaces = podfile.get_workspaces(podfile.list_targets.first)
end
puts "\e[33mNo Podfile detected\e[0m" if podfile_pathes.empty?

ios_projects.each do |project|
	puts ""
	puts "Inspecting: #{project}"
	puts "\e[33mWorkspace will be generated by CocoaPods\e[0m" if workspaces.has_value?(File.expand_path(project))

	valid_projects = []
	if workspaces.has_value?(File.expand_path(project))
		workspaces.each do |workspace, linked_project|
			if linked_project.eql?(File.expand_path(project))
				valid_projects << Pathname.new(workspace).relative_path_from(Pathname.new(Dir.pwd)).to_s
				puts "\e[33m  #{valid_projects.last}\e[0m"
			end
		end
	else
		valid_projects << project
	end

	puts ""
	puts "Schemes:"

	scheme_pathes = Dir[File.join(project, "xcshareddata/xcschemes/*.xcscheme")]
	schemes = []
	scheme_pathes.each do |scheme_path|
		scheme_name = File.basename(scheme_path, ".*")

		puts scheme_name
		schemes << scheme_name
	end

	if schemes.empty?
		puts "\e[31mNo shared scheme found\e[0m"
		next
	end

	valid_projects.each do |valid_project|
		config_helper.save("ios", branch, {
			name: valid_project,
			path: valid_project,
			schemes: schemes
		})
	end
end